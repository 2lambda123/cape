{
    // Settings for the PBS script
    "PBS": {
        "j": "oe",
        "r": "n",
        "S": "/bin/bash",
        "select": 2,
        "ncpus": 20,
        "mpiprocs": 20,
        "model": "ivy",
        "W": "group_list=e0847",
        "q": "devel",
        "walltime": "2:00:00"
    },
    
	// The names of these two files have the obvious defaults.
	"InputCntl": "inputs/input.cntl",
	"AeroCsh": "inputs/aero.csh",

    // Use the same mesh for all cases in the same group
    "GroupMesh": true,
	
	// Commands to load at head of PBS scripts
	"ShellCmds": [
        ". $MODULESHOME/init/bash",
	    "module use -a /u/wk/ddalle/Modules",
	    "module load cart3d",
	    "module load pycart",
        "ulimit -S -s 4194304"
	],
    
    // This section sets the parameters for flowCart.
	// The names for these parameters are copied from `aero.csh`.
	"flowCart": {
        // Run sequence
        "InputSeq": [0, 1],
        "IterSeq": [0, 1000],
        // flowCart order
        "first_order": [1, 0],
	    // Basic number of iterations
	    "it_fc": 200,
        // Use MPI?
        "mpi_fc": [0, 0],
        // Use aero.csh?
        "use_aero_csh": 1,
	    // Nominal CFL number
	    "cfl": 1.1,
	    "cflmin": 0.8,
	    // Multigrid levels for flowcart
	    "mg_fc": 3,
	    // Limiter type
	    "limiter": 2,
        // Cut cells first-order?
        "tm": [0, 1],
	    // If this is set to true, angle of attack changes z-velocity
	    "y_is_spanwise": true,
	    // Use binary input/output instead of ASCII
	    "binaryIO": true,
        // Write a Tecplot triangulation at the end of the run
        "tecO": true,
	    // Number of threads
	    "nProc": 8,
	    // MPI command name
	    "mpicmd": "mpiexec"
	},

    // Parameters for adjointCart
    "adjointCart": {
        // Number of iterations
        "it_ad": 120,
        // Multigrid levels
        "mg_ad": 3
    },
	
	// Parameters for adaptation
	"Adaptation": {
	    // Number of adaptation cycles
	    "n_adapt_cycles": [2, 4],
	    // Functional error tolerance
	    "etol": 0.000001,
	    // Stop adapting when this number of cells is reached
        "max_nCells": 50000000,
	    
	    // Number of flowCart iters on each new mesh
	    //  cycle  1   2   3   4   5   6   7   8   9  10   11+  
	    "ws_it": [200],
	    
	    // Growth in the number of cells
	    //       cycle   1    2    3    4    5    6    7+  
	    "mesh_growth": [1.5 ,1.5, 2.0, 2.0, 2.0, 2.0, 2.5],
	    
	    // Adaptation type, see `aero.csh` for more info
	    // cycle 1    2+
	    "apc": ["p", "a"]
	},

	// Parameters for creating the mesh
    "Mesh": {
        // This can be a list of .tri files.
        "TriFile": "inputs/bJet.i.tri",
        // Setting for 2D meshes
        "mesh2d": false,
        
        // Parameters for autoInputs
        "autoInputs": {
            // Nominal mesh radius (set to [], "", 0, or false to turn off)
            "r": 8
        },
        
        // Parameters for cubes
        "cubes": {
            // Number of refinements
            "maxR": 8,
            // Prespecified bounding boxes (set to [] or "" to turn off)
            "pre": "preSpec.c3d.cntl",
            // Internal parameters
            "cubes_a": 10,
            "cubes_b": 2,
            "reorder": true
        }
    },
    
    // Describe the reference values and config.
    "Config": {
        // Defer to a file for most things.
        "File": "inputs/Config.xml",
        // Reference values
        "RefArea": 1005.3,
        "RefLength": 66.3,
        // The moment point can be specified as a dictionary of components.
        "RefPoint": {
            "fuselage": [0.0, 0.0, 0.0],
            "wing": [66.3, 0.0, 0.0]
        },
        // Record force histories for the following components.
        "Force": [
            "fuselage", "wing", "htail", "vtail",
            "r_nacelle", "r_pylon", "l_nacelle", "l_pylon"
        ],
        // Coordinates at which to extract cut planes for post-processing
        "Xslices": [66.3],
        "Yslices": [0.00],
        "Zslices": [0.00]
    },
    
    // Define the output functional
    "Functional": {
        "CD": {"compID": "entire", "frame": 0, "force": 0, "weight": 1.0},
        "CL": {"compID": "wing",   "frame": 1, "force": 2, "weight": 0.5}
    },
    
    // Requirements for the data book
    "DataBook": {
        // List of components
        "Components": [
            "fuselage", "wing", "htail", "vtail",
            "r_nacelle", "r_pylon", "l_nacelle", "l_pylon"
        ],
        // Number of iterations to use for statistics.
        "nStats": 7000,
        // Place to put the data book
        "Folder": "data/poweron_test",
        // Sources for target information
        "Targets": [ ],
        // Different plots to make
        "Plot": [ ],
        // Information about each component.
        // (Available information read from loadsCC.dat)
        "fuselage": {
            // List of coefficients to put in databook
            "Type": "FM",
            // Correcting reference frame
            "Transformations": [{
                "Type": "ScaleCoeffs", "CLL": -1.0, "CLN": -1.0}]
        },
        // Wing component
        "wing": {
            // Force and moment
            "Type": "FM",
            // Correcting reference frame
            "Transformations": [{
                "Type": "ScaleCoeffs", "CLL": -1.0, "CLN": -1.0}]
        },
        // Other components; only force
        "r_nacelle": {"Type": "Force"},
        "l_nacelle": {"Type": "Force"},
        "r_pylon": {"Type": "Force"},
        "l_pylon": {"Type": "Force"}
    },
    
    // Report specifications
    "Report": {
        // Defaults
        "Figures": {
            // Results tables figure
            "Summary": {
                // List of subfigures
                "Subfigures": ["Conditions", "Forces"],
                // Generic options
                "Alignment": "left"
            },
            // Force convergence figure
            "History": {
                "Subfigures": [
                    "RSRB_CA", "RSRB_CY", "RSRB_CN",
                    "LSRB_CA", "LSRB_CY", "LSRB_CN", "L1"
                ],
                "Header": "Force, moment, and residual histories",
                "Alignment": "center"
            }
        },
        // Set options for specific subfigures
        "Subfigures": {
            // RSRB plots
            "RSRB": {
                "Type": "PlotCoeff",
                "Component": "RSRB_No_Base",
                "Delta": 0.02
            },
            "RSRB_CA": {"Type": "RSRB", "Coefficient": "CA", "Delta": 0.005}, 
            "RSRB_CY": {"Type": "RSRB", "Coefficient": "CY"},
            "RSRB_CN": {"Type": "RSRB", "Coefficient": "CN"},
            // LSRB plots
            "LSRB": {
                "Type": "PlotCoeff",
                "Component": "LSRB_No_Base",
                "Delta": 0.02
            },
            "LSRB_CA": {"Type": "LSRB", "Coefficient": "CA", "Delta": 0.005}, 
            "LSRB_CY": {"Type": "LSRB", "Coefficient": "CY"},
            "LSRB_CN": {"Type": "LSRB", "Coefficient": "CN"},
            "L1": {"Type": "PlotL1"},
            // Conditions table
            "Conditions": {
                "Type": "Conditions",
                "Header": "Conditions",
                "Position": "t",
                "SkipVars": ["ky", "kz", "kps", "kth", "kph"]
            },
            // Force and moment results table
            "Forces": {
                "Type": "Summary",
                "Header": "Force \\& moment summary",
                "Position": "t",
                "Iteration": 0,
                "Components": ["CORE_No_Base", "LSRB_No_Base", "RSRB_No_Base"],
                "Coefficients": ["CA", "CY", "CN"],
                "CA": ["mu", "std", "err"],
                "CN": ["mu", "err"]
            }   
        }, 
        // Case history
        "case": {
            "Title": "Cart3D Force, Moment, \\& Residual Report",
            "Author": "Derek J.~Dalle",
            "Archive": true,
            "Logo": "NASA_logo.pdf",
            "Restriction": "SBU - ITAR",
            "Figures": ["Summary", "History"]
        }
    },
            
    
    // Trajectory description
    "Trajectory": {
        // If a file is specified, and it exists, trajectory values will be
        // read from it.  Trajectory values can also be specified locally.
        "File": "inputs/Trajectory.dat",
        "Keys": ["Mach", "alpha", "beta", "config", "Label"],
        // Configuration name [default]
        "GroupPrefix": "poweroff"
    }
}
